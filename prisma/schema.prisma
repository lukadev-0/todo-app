generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model List {
    id          Int        @id @default(autoincrement())
    name        String
    description String     @default("")
    items       ListItem[]
    user        User       @relation(fields: [userId], references: [id])
    userId      Int
}

model ListItem {
    id        Int      @id @default(autoincrement())
    body      String
    completed Boolean
    createdAt DateTime @default(now())
    list      List     @relation(fields: [listId], references: [id])
    listId    Int
}

// Next Auth models
model Account {
    id                Int     @id @default(autoincrement())
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId            Int

    @@unique([provider, providerAccountId])
}

model Session {
    id           Int      @id @default(autoincrement())
    sessionToken String   @unique
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId       Int
}

model User {
    id            Int       @id @default(autoincrement())
    name          String?
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    lists         List[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
